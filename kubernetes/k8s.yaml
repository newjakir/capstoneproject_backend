# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: jakir007-capsp

---
# Persistent Volume Claim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: jakir007-capsp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: jakir007-capsp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: capsp-env-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: capsp-env-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: capsp-env-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: jakir007-capsp
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres

---
# Backend Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capsp-backend
  namespace: jakir007-capsp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capsp-backend
  template:
    metadata:
      labels:
        app: capsp-backend
    spec:
      containers:
        - name: capsp-backend
          image: newjakir/3-tire-back:latest
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: capsp-env-secret
          readinessProbe:
            httpGet:
              path: /health/  # âœ… Make sure this is publicly accessible without auth
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: capsp-backend
  namespace: jakir007-capsp
spec:
  type: LoadBalancer  # Use NodePort if LoadBalancer unsupported
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: capsp-backend
